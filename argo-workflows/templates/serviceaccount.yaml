apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflow-executor
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workflow-executor
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
      - workflowtaskresults
      - workflowtasksets
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - delete
      - create
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - pods/exec
      - configmaps
      - secrets
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow-executor-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow-executor
subjects:
  - kind: ServiceAccount
    name: argo-workflow-executor
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows-admin
  namespace: {{ .Release.Namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'argo-workflows-admins' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "10"
---
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: argo-workflows-admin.service-account-token
  annotations:
    kubernetes.io/service-account.name: argo-workflows-admin
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflows-admin-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: ["argoproj.io"]
    resources:
      - workflows
      - workflows/finalizers
      - workfloweventbindings
      - workfloweventbindings/finalizers
      - workflowtemplates
      - workflowtemplates/finalizers
      - cronworkflows
      - cronworkflows/finalizers
      - clusterworkflowtemplates
      - clusterworkflowtemplates/finalizers
      - workflowtasksets
      - workflowtasksets/finalizers
      - workflowtaskresults
      - workflowtaskresults/finalizers
      - workflowartifactgctasks
      - workflowartifactgctasks/finalizers
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - "pods"
      - "pods/log"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflows-admin-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflows-admin-role
subjects:
  - kind: ServiceAccount
    name: argo-workflows-admin
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows-readonly
  namespace: {{ .Release.Namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "true"
    workflows.argoproj.io/rbac-rule-precedence: "1"
---
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: argo-workflows-readonly.service-account-token
  annotations:
    kubernetes.io/service-account.name: argo-workflows-readonly
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflows-readonly-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: ["argoproj.io"]
    resources:
      - "workflows"
      - "workflowtemplates"
      - "cronworkflows"
      - "clusterworkflowtemplates"
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pod", "pod/logs"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflows-readonly-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflows-readonly-role
subjects:
  - kind: ServiceAccount
    name: argo-workflows-readonly
    namespace: {{ .Release.Namespace }}
